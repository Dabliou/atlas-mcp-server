{
  "id": "software_engineer/security_engineer",
  "name": "LLM Security Engineer Agent",
  "description": "Comprehensive security engineering and compliance implementation with focus on threat modeling, security controls, and compliance requirements",
  "version": "1.1.0",
  "author": "Atlas Team",
  "tags": ["llm-agent", "security", "compliance", "threat-modeling"],
  "variables": [
    {
      "name": "projectName",
      "description": "Name of the project/product",
      "type": "string",
      "required": true
    },
    {
      "name": "securityLevel",
      "description": "Required security level",
      "type": "string",
      "required": true,
      "default": "standard",
      "enum": ["standard", "high", "regulated"]
    },
    {
      "name": "complianceFrameworks",
      "description": "Required compliance frameworks",
      "type": "array",
      "required": false,
      "default": ["OWASP"],
      "items": {
        "type": "string",
        "enum": ["OWASP", "SOC2", "HIPAA", "GDPR", "PCI-DSS"]
      }
    },
    {
      "name": "enableAuditLogging",
      "description": "Enable comprehensive audit logging",
      "type": "boolean",
      "required": false,
      "default": true
    },
    {
      "name": "maxAuthAttempts",
      "description": "Maximum authentication attempts before lockout",
      "type": "number",
      "required": false,
      "default": 5
    }
  ],
  "tasks": [
    {
      "path": "${projectName}/security/requirements",
      "title": "Security Requirements Analysis",
      "description": "Analyze and document security requirements and compliance needs",
      "type": "MILESTONE",
      "metadata": {
        "priority": "high",
        "tags": ["security", "requirements"],
        "technicalRequirements": {
          "language": "typescript",
          "framework": "node",
          "dependencies": ["security-requirements-schema", "compliance-checklist", "threat-dragon"],
          "environment": "Node.js v18+"
        },
        "acceptanceCriteria": {
          "criteria": [
            "Security requirements documented",
            "Compliance needs identified",
            "Risk assessment completed",
            "Security controls mapped"
          ],
          "testCases": [
            "Validate security requirements",
            "Review compliance mapping",
            "Test risk assessment",
            "Verify control coverage"
          ]
        }
      }
    },
    {
      "path": "${projectName}/security/threat-model",
      "title": "Threat Modeling",
      "description": "Perform comprehensive threat modeling",
      "type": "MILESTONE",
      "dependencies": ["${projectName}/security/requirements"],
      "metadata": {
        "priority": "high",
        "tags": ["threat-modeling", "security"],
        "technicalRequirements": {
          "language": "typescript",
          "framework": "node",
          "dependencies": ["owasp-threat-dragon", "microsoft-tmt", "stride-model"],
          "environment": "Node.js v18+"
        },
        "acceptanceCriteria": {
          "criteria": [
            "Threat model documented",
            "Attack vectors identified",
            "Mitigations defined",
            "Risk levels assessed"
          ],
          "testCases": [
            "Review threat model completeness",
            "Validate attack vectors",
            "Test mitigation strategies",
            "Verify risk assessments"
          ]
        }
      }
    },
    {
      "path": "${projectName}/security/architecture",
      "title": "Security Architecture Design",
      "description": "Design security architecture and controls",
      "type": "MILESTONE",
      "dependencies": ["${projectName}/security/threat-model"],
      "metadata": {
        "priority": "high",
        "tags": ["architecture", "security"],
        "technicalRequirements": {
          "language": "typescript",
          "framework": "node",
          "dependencies": ["helmet", "passport", "oauth2-server"],
          "environment": "Node.js v18+"
        },
        "acceptanceCriteria": {
          "criteria": [
            "Security architecture documented",
            "Authentication design completed",
            "Authorization model defined",
            "Data protection designed"
          ],
          "testCases": [
            "Test authentication flows",
            "Validate authorization rules",
            "Verify data protection",
            "Review security patterns"
          ]
        }
      }
    },
    {
      "path": "${projectName}/security/compliance",
      "title": "Compliance Implementation",
      "description": "Implement compliance requirements and controls",
      "type": "MILESTONE",
      "dependencies": ["${projectName}/security/architecture"],
      "metadata": {
        "priority": "high",
        "tags": ["compliance", "security"],
        "technicalRequirements": {
          "language": "typescript",
          "framework": "node",
          "dependencies": ["audit-logger", "compliance-monitor", "policy-enforcer"],
          "environment": "Node.js v18+"
        },
        "acceptanceCriteria": {
          "criteria": [
            "Compliance controls implemented",
            "Audit logging configured",
            "Policy enforcement setup",
            "Documentation completed"
          ],
          "testCases": [
            "Validate compliance controls",
            "Test audit logging",
            "Review policy enforcement",
            "Check documentation"
          ]
        }
      }
    },
    {
      "path": "${projectName}/security/testing",
      "title": "Security Testing Setup",
      "description": "Establish security testing framework and procedures",
      "type": "MILESTONE",
      "dependencies": ["${projectName}/security/architecture"],
      "metadata": {
        "priority": "high",
        "tags": ["testing", "security"],
        "technicalRequirements": {
          "language": "typescript",
          "framework": "node",
          "dependencies": ["owasp-zap", "snyk", "sonarqube"],
          "environment": "Node.js v18+"
        },
        "acceptanceCriteria": {
          "criteria": [
            "Security testing framework setup",
            "Test cases documented",
            "Automation configured",
            "Coverage metrics defined"
          ],
          "testCases": [
            "Run security test suite",
            "Validate test coverage",
            "Verify automation",
            "Check reporting"
          ]
        }
      }
    },
    {
      "path": "${projectName}/security/monitoring",
      "title": "Security Monitoring Setup",
      "description": "Implement security monitoring and incident response",
      "type": "MILESTONE",
      "dependencies": ["${projectName}/security/testing"],
      "metadata": {
        "priority": "high",
        "tags": ["monitoring", "security"],
        "technicalRequirements": {
          "language": "typescript",
          "framework": "node",
          "dependencies": ["wazuh", "elastic-siem", "prometheus-alertmanager"],
          "environment": "Node.js v18+"
        },
        "acceptanceCriteria": {
          "criteria": [
            "Monitoring system configured",
            "Alerts defined",
            "Incident response documented",
            "Escalation paths established"
          ],
          "testCases": [
            "Test monitoring system",
            "Validate alert rules",
            "Review response procedures",
            "Check escalation flows"
          ]
        }
      }
    }
  ]
}
