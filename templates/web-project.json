{
  "id": "web-project",
  "name": "Web Project Setup",
  "description": "Comprehensive template for modern web development projects including setup, development, and deployment phases",
  "version": "1.1.0",
  "author": "Atlas Team",
  "tags": ["web", "frontend", "project-setup", "development"],
  "variables": [
    {
      "name": "projectName",
      "description": "Name of the project (will be used for directory and package names)",
      "type": "string",
      "required": true
    },
    {
      "name": "useTypeScript",
      "description": "Enable TypeScript for enhanced type safety and developer experience",
      "type": "boolean",
      "required": false,
      "default": true
    },
    {
      "name": "includeTesting",
      "description": "Set up testing infrastructure with Jest and React Testing Library",
      "type": "boolean",
      "required": false,
      "default": true
    },
    {
      "name": "includeCI",
      "description": "Configure GitHub Actions for CI/CD",
      "type": "boolean",
      "required": false,
      "default": true
    },
    {
      "name": "cssFramework",
      "description": "CSS framework to use (tailwind, styled-components, or none)",
      "type": "string",
      "required": false,
      "default": "tailwind"
    }
  ],
  "tasks": [
    {
      "path": "${projectName}/planning",
      "title": "Project Planning",
      "description": "Initial project planning and architecture decisions",
      "type": "MILESTONE",
      "metadata": {
        "priority": "high",
        "tags": ["planning", "architecture"],
        "acceptanceCriteria": [
          "Project requirements documented",
          "Architecture decisions recorded",
          "Tech stack finalized",
          "Development standards established"
        ]
      }
    },
    {
      "path": "${projectName}/planning/requirements",
      "title": "Document Requirements",
      "description": "Document project requirements and constraints",
      "type": "TASK",
      "dependencies": ["${projectName}/planning"],
      "metadata": {
        "priority": "high",
        "deliverables": [
          "Functional requirements document",
          "Technical constraints list",
          "Browser/device support matrix"
        ]
      }
    },
    {
      "path": "${projectName}/planning/architecture",
      "title": "Architecture Planning",
      "description": "Define project architecture and technical decisions",
      "type": "TASK",
      "dependencies": ["${projectName}/planning/requirements"],
      "metadata": {
        "priority": "high",
        "deliverables": [
          "Architecture decision records (ADRs)",
          "Component structure diagram",
          "Data flow documentation"
        ]
      }
    },
    {
      "path": "${projectName}/setup",
      "title": "Project Setup",
      "description": "Initialize project structure and core configuration",
      "type": "MILESTONE",
      "dependencies": ["${projectName}/planning"],
      "metadata": {
        "priority": "high",
        "tags": ["setup", "configuration"],
        "acceptanceCriteria": [
          "Project structure created",
          "Core dependencies installed",
          "Development environment configured",
          "Basic documentation in place"
        ]
      }
    },
    {
      "path": "${projectName}/setup/structure",
      "title": "Create Project Structure",
      "description": "Set up project directories and initial configuration files",
      "type": "TASK",
      "dependencies": ["${projectName}/setup"],
      "metadata": {
        "priority": "high",
        "deliverables": [
          "Project directory structure",
          "README.md",
          "package.json",
          ".gitignore",
          "Environment configuration files"
        ],
        "technicalRequirements": {
          "tools": ["git", "node", "npm/yarn"]
        }
      }
    },
    {
      "path": "${projectName}/setup/dependencies",
      "title": "Install Dependencies",
      "description": "Install and configure project dependencies",
      "type": "TASK",
      "dependencies": ["${projectName}/setup/structure"],
      "metadata": {
        "priority": "high",
        "technicalRequirements": {
          "coreDependencies": ["react", "react-dom", "react-router-dom"],
          "devDependencies": ["eslint", "prettier", "vite"]
        }
      }
    },
    {
      "path": "${projectName}/setup/typescript",
      "title": "Configure TypeScript",
      "description": "Set up TypeScript configuration and tooling",
      "type": "TASK",
      "dependencies": ["${projectName}/setup/dependencies"],
      "metadata": {
        "tags": ["typescript", "configuration"],
        "technicalRequirements": {
          "dependencies": ["typescript", "@types/react", "@types/react-dom", "@types/node"],
          "environment": "Node.js"
        },
        "deliverables": ["tsconfig.json", "TypeScript path aliases", "Type definitions structure"]
      }
    },
    {
      "path": "${projectName}/setup/testing",
      "title": "Set Up Testing Framework",
      "description": "Configure testing environment and write initial tests",
      "type": "TASK",
      "dependencies": ["${projectName}/setup/dependencies"],
      "metadata": {
        "tags": ["testing", "quality"],
        "technicalRequirements": {
          "dependencies": [
            "jest",
            "@testing-library/react",
            "@testing-library/jest-dom",
            "@testing-library/user-event"
          ],
          "environment": "Node.js"
        },
        "deliverables": [
          "Jest configuration",
          "Test utilities setup",
          "Example component tests",
          "GitHub Actions test workflow"
        ]
      }
    },
    {
      "path": "${projectName}/setup/styling",
      "title": "Configure Styling Solution",
      "description": "Set up CSS framework and styling infrastructure",
      "type": "TASK",
      "dependencies": ["${projectName}/setup/dependencies"],
      "metadata": {
        "tags": ["styling", "css"],
        "technicalRequirements": {
          "conditionalDependencies": {
            "tailwind": ["tailwindcss", "postcss", "autoprefixer"],
            "styled-components": ["styled-components", "@types/styled-components"]
          }
        },
        "deliverables": [
          "CSS framework configuration",
          "Global styles setup",
          "Theme configuration",
          "Style guide documentation"
        ]
      }
    },
    {
      "path": "${projectName}/setup/ci",
      "title": "Configure CI/CD",
      "description": "Set up continuous integration and deployment workflows",
      "type": "TASK",
      "dependencies": ["${projectName}/setup/testing"],
      "metadata": {
        "tags": ["ci-cd", "automation"],
        "technicalRequirements": {
          "tools": ["github-actions"],
          "environment": "GitHub"
        },
        "deliverables": [
          "Build workflow",
          "Test workflow",
          "Lint workflow",
          "Deployment workflow template"
        ]
      }
    },
    {
      "path": "${projectName}/development",
      "title": "Development Setup",
      "description": "Configure development environment and tooling",
      "type": "MILESTONE",
      "dependencies": ["${projectName}/setup"],
      "metadata": {
        "priority": "high",
        "tags": ["development", "tooling"],
        "acceptanceCriteria": [
          "Development server configured",
          "Hot reloading working",
          "Debug configuration set up",
          "Code quality tools in place"
        ]
      }
    },
    {
      "path": "${projectName}/development/tooling",
      "title": "Configure Development Tools",
      "description": "Set up development tools and extensions",
      "type": "TASK",
      "dependencies": ["${projectName}/development"],
      "metadata": {
        "deliverables": [
          "VSCode settings",
          "EditorConfig setup",
          "Git hooks configuration",
          "Debug launch configurations"
        ]
      }
    },
    {
      "path": "${projectName}/development/quality",
      "title": "Set Up Code Quality Tools",
      "description": "Configure linting, formatting, and code quality checks",
      "type": "TASK",
      "dependencies": ["${projectName}/development/tooling"],
      "metadata": {
        "technicalRequirements": {
          "dependencies": ["eslint", "prettier", "husky", "lint-staged"]
        },
        "deliverables": [
          "ESLint configuration",
          "Prettier configuration",
          "Git hooks for quality checks",
          "Code quality documentation"
        ]
      }
    }
  ]
}
